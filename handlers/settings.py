from aiogram import Router
from aiogram.filters import Text
from aiogram.fsm.context import FSMContext
from aiogram.types import Message, CallbackQuery
from aiogram.exceptions import TelegramBadRequest

from keyboards.main_menu import get_main_menu
from keyboards.teachers import (
    teacher_profile_keyboard,
    edit_teacher_field_keyboard,
    settings_menu_keyboard
)
import database.crud as crud
from states.auth_state import TeacherStates

router = Router()

# üìå –û—Ç–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫
@router.message(Text(text=["‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏"]))
async def menu_settings(message: Message, **data):
    await message.answer("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏:", reply_markup=settings_menu_keyboard())


# üåê –°–º–µ–Ω–∞ —è–∑—ã–∫–∞
@router.callback_query(Text("set_lang"))
async def callback_set_lang(callback: CallbackQuery, teacher):
    await callback.answer()
    new_lang = "en" if teacher.language == "ru" else "ru"
    teacher.language = new_lang
    await crud.update_teacher(teacher)
    await callback.message.edit_text(f"Language changed to {'English' if new_lang == 'en' else 'Russian'}.")
    await callback.message.answer("Main menu:", reply_markup=get_main_menu(new_lang))


# ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è ‚Äî —Å–ø–∏—Å–æ–∫ –ø–æ–ª–µ–π
@router.callback_query(Text("edit_profile"))
async def callback_edit_profile(callback: CallbackQuery):
    await callback.answer()
    try:
        await callback.message.edit_text("‚úèÔ∏è –ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?", reply_markup=edit_teacher_field_keyboard())
    except TelegramBadRequest as e:
        if "message is not modified" not in str(e):
            raise


# –í—ã–±–æ—Ä –ø–æ–ª—è –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
@router.callback_query(Text(startswith="edit_teacher_field:"))
async def callback_select_field(callback: CallbackQuery, state: FSMContext):
    field = callback.data.split(":")[1]
    await state.set_state(TeacherStates.editing_field)
    await state.update_data(edit_field=field)
    await callback.answer()
    await callback.message.edit_text(f"‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è: *{field}*", parse_mode="Markdown")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
@router.message(TeacherStates.editing_field)
async def process_edit_field(message: Message, state: FSMContext, teacher):
    state_data = await state.get_data()
    field = state_data.get("edit_field")

    if not field:
        return

    new_value = message.text.strip()
    await crud.update_teacher_field(teacher, field, new_value)
    await state.clear()

    await message.answer(f"‚úÖ –ü–æ–ª–µ *{field}* —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!", parse_mode="Markdown")

    profile_text = (
        f"üë§ {teacher.surname or ''} {teacher.name or ''} {teacher.patronymic or ''}\n"
        f"üóìÔ∏è –î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: {teacher.birth_date or '‚Äî'}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {teacher.phone or '‚Äî'}\n"
        f"üìß Email: {teacher.email or '‚Äî'}\n"
        f"üìö –ü—Ä–µ–¥–º–µ—Ç—ã: {teacher.subjects or '‚Äî'}\n"
        f"üíº –ü—Ä–æ—Ñ–µ—Å—Å–∏—è: {teacher.occupation or '‚Äî'}\n"
        f"üè¢ –ú–µ—Å—Ç–æ —Ä–∞–±–æ—Ç—ã: {teacher.workplace or '‚Äî'}"
    )

    await message.answer(profile_text, reply_markup=teacher_profile_keyboard())


# üîô –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –∏–∑ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
@router.callback_query(Text("back_to_settings"))
async def back_to_settings(callback: CallbackQuery):
    await callback.answer()
    try:
        await callback.message.edit_text("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏:", reply_markup=settings_menu_keyboard())
    except TelegramBadRequest as e:
        if "message is not modified" not in str(e):
            raise
